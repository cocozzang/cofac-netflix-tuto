name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: Display deployment info
        run: |
          echo "ðŸš€ Deployment started!"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Triggered by: ${{ github.event_name }}"

      - name: set up nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: create env file
        env:
          ENV: ${{secrets.ENV}}
          DB_TYPE: ${{secrets.DB_TYPE}}
          DB_HOST: ${{secrets.DB_HOST}}
          DB_PORT: ${{secrets.DB_PORT}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_DATABASE: ${{secrets.DB_DATABASE}}
          HASH_ROUNDS: ${{secrets.HASH_ROUNDS}}
          ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
          REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          BUCKET_NAME: ${{secrets.BUCKET_NAME}}
        run: |
          touch .env.test
          echo ENV="test" >> .env.test
          echo DB_TYPE="$DB_TYPE" >> .env.test
          echo DB_HOST="localhost" >> .env.test
          echo DB_PORT="$DB_PORT" >> .env.test
          echo DB_USERNAME="$DB_USERNAME" >> .env.test
          echo DB_PASSWORD="$DB_PASSWORD" >> .env.test
          echo DB_DATABASE="$DB_DATABASE" >> .env.test
          echo HASH_ROUNDS="$HASH_ROUNDS" >> .env.test
          echo ACCESS_TOKEN_SECRET="$ACCESS_TOKEN_SECRET" >> .env.test
          echo REFRESH_TOKEN_SECRET="$REFRESH_TOKEN_SECRET" >> .env.test
          echo AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" >> .env.test
          echo AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" >> .env.test
          echo AWS_REGION="$AWS_REGION" >> .env.test
          echo BUCKET_NAME="$BUCKET_NAME" >> .env.test
          echo ".env.test created"
          cat .env.test

          touch .env.prod
          echo ENV="$ENV" >> .env.prod
          echo DB_TYPE="$DB_TYPE" >> .env.prod
          echo DB_HOST="$DB_HOST" >> .env.prod
          echo DB_PORT="$DB_PORT" >> .env.prod
          echo DB_USERNAME="$DB_USERNAME" >> .env.prod
          echo DB_PASSWORD="$DB_PASSWORD" >> .env.prod
          echo DB_DATABASE="$DB_DATABASE" >> .env.prod
          echo HASH_ROUNDS="$HASH_ROUNDS" >> .env.prod
          echo ACCESS_TOKEN_SECRET="$ACCESS_TOKEN_SECRET" >> .env.prod
          echo REFRESH_TOKEN_SECRET="$REFRESH_TOKEN_SECRET" >> .env.prod
          echo AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" >> .env.prod
          echo AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" >> .env.prod
          echo AWS_REGION="$AWS_REGION" >> .env.prod
          echo BUCKET_NAME="$BUCKET_NAME" >> .env.prod
          echo ".env.prod created"
          cat .env.prod

      - name: Create Folders
        run: |
          mkdir -p ./public/movie
          mkdir -p ./public/temp

      - name: install dependencies
        run: npm i

      - name: build project
        run: npm run build

      - name: Run Test
        run: npm run test

      - name: Install Typeorm
        run: npm i -g typeorm

      - name: Run Migration
        run: typeorm migration:run -d ./dist/database/data-source.js

      - name: zip artifact for deployment
        run: |
          zip -r deploy.zip . -x "node_modules/*" ".git/*" ".github/*" "*.zip"

      - name: upload to s3
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
        run: |
          aws configure set region $AWS_REGION
          aws s3 cp deploy.zip s3://cofac-netflic-bucket-cocochuchu503/deploy.zip

      - name: deploy to aws elastic beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "cofac-netflix-eb" \
            --version-label $GITHUB_SHA \
            --source-bundle S3Bucket="cofac-netflic-bucket-cocochuchu503",S3Key="deploy.zip"

          aws elasticbeanstalk update-environment \
            --application-name "cofac-netflix-eb" \
            --environment-name "Cofac-netflix-eb-env" \
            --version-label $GITHUB_SHA
